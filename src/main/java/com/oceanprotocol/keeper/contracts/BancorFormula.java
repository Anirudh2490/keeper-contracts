package com.oceanprotocol.keeper.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.HashMap;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.0.1.
 */
public class BancorFormula extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_VERSION = "version";

    public static final String FUNC_CALCULATEPURCHASERETURN = "calculatePurchaseReturn";

    public static final String FUNC_CALCULATESALERETURN = "calculateSaleReturn";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected BancorFormula(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected BancorFormula(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected BancorFormula(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected BancorFormula(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> version() {
        final Function function = new Function(FUNC_VERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> calculatePurchaseReturn(BigInteger _supply, BigInteger _connectorBalance, BigInteger _connectorWeight, BigInteger _depositAmount) {
        final Function function = new Function(FUNC_CALCULATEPURCHASERETURN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_supply), 
                new org.web3j.abi.datatypes.generated.Uint256(_connectorBalance), 
                new org.web3j.abi.datatypes.generated.Uint32(_connectorWeight), 
                new org.web3j.abi.datatypes.generated.Uint256(_depositAmount)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> calculateSaleReturn(BigInteger _supply, BigInteger _connectorBalance, BigInteger _connectorWeight, BigInteger _sellAmount) {
        final Function function = new Function(FUNC_CALCULATESALERETURN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_supply), 
                new org.web3j.abi.datatypes.generated.Uint256(_connectorBalance), 
                new org.web3j.abi.datatypes.generated.Uint32(_connectorWeight), 
                new org.web3j.abi.datatypes.generated.Uint256(_sellAmount)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static BancorFormula load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new BancorFormula(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static BancorFormula load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new BancorFormula(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static BancorFormula load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new BancorFormula(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static BancorFormula load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new BancorFormula(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<BancorFormula> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(BancorFormula.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<BancorFormula> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(BancorFormula.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<BancorFormula> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(BancorFormula.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<BancorFormula> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(BancorFormula.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }
}
