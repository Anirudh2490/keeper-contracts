package com.oceanprotocol.keeper.contracts;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.0.1.
 */
public class PLCRVoting extends Contract {
    private static final String BINARY = "0x608060405234801561001057600080fd5b5060405160208061262e833981016040525160058054600160a060020a03909216600160a060020a0319909216919091179055600080556125d8806100566000396000f3006080604052600436106101925763ffffffff60e060020a600035041663053e71a681146101975780630a9b79c5146101c15780632173a10f146101d65780632c052031146101eb57806332ed3d6014610212578063427fa1d214610230578063441c77c014610251578063494031831461027d5780634d7b7d83146102955780636148fed5146102ad5780636b2d95d4146102fa5780636bc760871461031b5780636cbf9c5e1461034c5780637f97e8361461036f578063819b02931461039357806388d21ff3146103bd57806397508f36146103d557806397603560146103ea5780639b7f202314610402578063a1103f3714610426578063a25236fe1461044a578063a4439dc514610462578063aa7ca4641461047a578063b11d8bb81461049e578063b43bd069146104bc578063d1382092146104e3578063d901402b14610507578063d9548e531461052b578063e1106b9714610543578063e7b1d43c1461055b578063ee68483014610573578063f240f7c31461058b578063fb087886146105a0578063fc0c546a146105c1575b600080fd5b3480156101a357600080fd5b506101af6004356105d6565b60408051918252519081900360200190f35b3480156101cd57600080fd5b506101af610676565b3480156101e257600080fd5b506101af61067a565b3480156101f757600080fd5b506101af600160a060020a036004351660243560443561067f565b34801561021e57600080fd5b506101af600435602435604435610848565b34801561023c57600080fd5b506101af600160a060020a036004351661093d565b34801561025d57600080fd5b506102696004356109f7565b604080519115158252519081900360200190f35b34801561028957600080fd5b50610269600435610a7b565b3480156102a157600080fd5b506101af600435610b54565b3480156102b957600080fd5b506102c5600435610b6a565b6040805196875260208701959095528585019390935260608501919091526080840152151560a0830152519081900360c00190f35b34801561030657600080fd5b506101af600160a060020a0360043516610ba3565b34801561032757600080fd5b50610330610bb7565b60408051600160a060020a039092168252519081900360200190f35b34801561035857600080fd5b5061036d600435602435604435606435610bc6565b005b34801561037b57600080fd5b50610269600160a060020a0360043516602435611300565b34801561039f57600080fd5b50610269600435602435600160a060020a036044351660643561137e565b3480156103c957600080fd5b506102696004356113bf565b3480156103e157600080fd5b506101af6113d4565b3480156103f657600080fd5b5061036d6004356113da565b34801561040e57600080fd5b50610269600435600160a060020a0360243516611614565b34801561043257600080fd5b506101af600160a060020a0360043516602435611734565b34801561045657600080fd5b5061036d6004356117e1565b34801561046e57600080fd5b50610269600435611a0a565b34801561048657600080fd5b50610269600160a060020a0360043516602435611a71565b3480156104aa57600080fd5b5061036d600435602435604435611aef565b3480156104c857600080fd5b506101af600160a060020a0360043516602435604435611ea8565b3480156104ef57600080fd5b506101af600160a060020a03600435166024356120bd565b34801561051357600080fd5b506101af600160a060020a036004351660243561218f565b34801561053757600080fd5b5061026960043561222e565b34801561054f57600080fd5b506101af600435612233565b34801561056757600080fd5b5061036d600435612245565b34801561057f57600080fd5b50610269600435612407565b34801561059757600080fd5b50610330612472565b3480156105ac57600080fd5b50610269600160a060020a0360043516612481565b3480156105cd57600080fd5b50610330612525565b60006105e182612407565b1515610637576040805160e560020a62461bcd02815260206004820152601660248201527f706f6c6c20686173206e6f7420656e6465642079657400000000000000000000604482015290519081900360640190fd5b61064082610a7b565b1561065d5750600081815260016020526040902060030154610671565b506000818152600160205260409020600401545b919050565b4290565b600081565b600080600061068d8661093d565b915061069986836120bd565b90505b811561083b576106ac86836120bd565b905084811161077e578382141561077657600160a060020a03861660009081526003602090815260409182902082517f30fe0a0a000000000000000000000000000000000000000000000000000000008152600481019190915260248101859052915173__DLL___________________________________926330fe0a0a926044808301939192829003018186803b15801561074757600080fd5b505af415801561075b573d6000803e3d6000fd5b505050506040513d602081101561077157600080fd5b505191505b81925061083f565b600160a060020a03861660009081526003602090815260409182902082517f30fe0a0a000000000000000000000000000000000000000000000000000000008152600481019190915260248101859052915173__DLL___________________________________926330fe0a0a926044808301939192829003018186803b15801561080857600080fd5b505af415801561081c573d6000803e3d6000fd5b505050506040513d602081101561083257600080fd5b5051915061069c565b8192505b50509392505050565b6000805460010181558080610863428663ffffffff61253416565b9150610875828563ffffffff61253416565b6040805160c08101825284815260208082018481528284018b8152600060608086018281526080870183815260a088018481528454855260018089528a862099518a55965196890196909655935160028801555160038701559151600486015591516005909401805460ff1916941515949094179093555483518b8152918201879052818401859052925193945033937f404f1f1c229d9eb2a949e7584da6ffde9d059ef2169f487ca815434cce0640d0929181900390910190a35050600054949350505050565b600160a060020a038116600090815260036020908152604080832081517f30fe0a0a000000000000000000000000000000000000000000000000000000008152600481019190915260248101849052905173__DLL___________________________________926330fe0a0a9260448082019391829003018186803b1580156109c557600080fd5b505af41580156109d9573d6000803e3d6000fd5b505050506040513d60208110156109ef57600080fd5b505192915050565b6000610a02826113bf565b1515610a46576040805160e560020a62461bcd028152602060048201526013602482015260008051602061258d833981519152604482015290519081900360640190fd5b60008281526001602081905260409091200154610a629061222e565b158015610a755750610a7382611a0a565b155b92915050565b6000610a85612553565b610a8e83612407565b1515610ae4576040805160e560020a62461bcd02815260206004820152601660248201527f706f6c6c20686173206e6f7420656e6465642079657400000000000000000000604482015290519081900360640190fd5b5050600090815260016020818152604092839020835160c081018552815481529281015491830191909152600281015492820183905260038101546060830181905260048201546080840181905260059092015460ff16151560a090930192909252810190910260649091021190565b6000908152600160208190526040909120015490565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401549293919290919060ff1686565b6000610a7582610bb28461093d565b6120bd565b600754600160a060020a031681565b6000806000610bd487611a0a565b1515610c2a576040805160e560020a62461bcd02815260206004820152600f60248201527f706f6c6c206e6f74206163746963650000000000000000000000000000000000604482015290519081900360640190fd5b33600090815260026020526040902054851115610c91576040805160e560020a62461bcd02815260206004820152601160248201527f6e6f7420656e6f75676820746f6b656e73000000000000000000000000000000604482015290519081900360640190fd5b861515610ce8576040805160e560020a62461bcd02815260206004820152600c60248201527f706f6c6c20696420697320300000000000000000000000000000000000000000604482015290519081900360640190fd5b6000878152600160208190526040909120600581015490945060ff161515148015610d25575033600090815260088401602052604090205460ff16155b15610d5c57604051339088907f50388cf1fb7d79188928435a69b18bcc3e9e869f150a58917c3e41b6e32d563390600090a36112f7565b831580610e1257503360009081526003602090815260409182902082517f366a5ba2000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052915173__DLL___________________________________9263366a5ba2926044808301939192829003018186803b158015610de557600080fd5b505af4158015610df9573d6000803e3d6000fd5b505050506040513d6020811015610e0f57600080fd5b50515b1515610e8e576040805160e560020a62461bcd02815260206004820152602a60248201527f70726576696f7573506f6c6c206e6f742030206f72206e6f7420636f6e74616960448201527f6e656420696e20444c4c00000000000000000000000000000000000000000000606482015290519081900360840190fd5b3360009081526003602090815260409182902082517f07d29ac9000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052915173__DLL___________________________________926307d29ac9926044808301939192829003018186803b158015610f0f57600080fd5b505af4158015610f23573d6000803e3d6000fd5b505050506040513d6020811015610f3957600080fd5b50519150868214610f4a5781610ff8565b3360009081526003602090815260409182902082517f07d29ac90000000000000000000000000000000000000000000000000000000081526004810191909152602481018a9052915173__DLL___________________________________926307d29ac9926044808301939192829003018186803b158015610fcb57600080fd5b505af4158015610fdf573d6000803e3d6000fd5b505050506040513d6020811015610ff557600080fd5b50515b91506110068483338861137e565b151561105c576040805160e560020a62461bcd02815260206004820152601560248201527f706f736974696f6e206973206e6f742076616c69640000000000000000000000604482015290519081900360640190fd5b3360009081526003602052604080822081517f9735c51b000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052604481018a905260648101859052905173__DLL___________________________________92639735c51b9260848082019391829003018186803b1580156110e757600080fd5b505af41580156110fb573d6000803e3d6000fd5b505050506111093388611734565b604080517f977aa031000000000000000000000000000000000000000000000000000000008152600481810152602481018390526064810188905260806044820152600960848201527f6e756d546f6b656e73000000000000000000000000000000000000000000000060a4820152905191925073__AttributeStore________________________9163977aa0319160c480820192600092909190829003018186803b1580156111b957600080fd5b505af41580156111cd573d6000803e3d6000fd5b5050604080517f977aa03100000000000000000000000000000000000000000000000000000000815260048181015260248101859052606481018a905260806044820152600a60848201527f636f6d6d6974486173680000000000000000000000000000000000000000000060a4820152905173__AttributeStore________________________935063977aa031925060c4808301926000929190829003018186803b15801561127d57600080fd5b505af4158015611291573d6000803e3d6000fd5b5050506000888152600160208181526040808420338086526006909101835293819020805460ff1916909317909255815189815291519293508a927fea7979e4280d7e6bffc1c7d83a1ac99f16d02ecc14465ce41016226783b663d79281900390910190a35b50505050505050565b600061130b826113bf565b151561134f576040805160e560020a62461bcd028152602060048201526013602482015260008051602061258d833981519152604482015290519081900360640190fd5b506000908152600160209081526040808320600160a060020a0394909416835260069093019052205460ff1690565b600080600061138d85886120bd565b841015915061139c85876120bd565b841115806113a8575085155b90508180156113b45750805b979650505050505050565b60008115801590610a75575050600054101590565b60005481565b600081815260016020819052604090912001546113f69061222e565b151561144c576040805160e560020a62461bcd02815260206004820152601060248201527f706f6c6c206e6f74206578706972656400000000000000000000000000000000604482015290519081900360640190fd5b3360009081526003602090815260409182902082517f366a5ba2000000000000000000000000000000000000000000000000000000008152600481019190915260248101849052915173__DLL___________________________________9263366a5ba2926044808301939192829003018186803b1580156114cd57600080fd5b505af41580156114e1573d6000803e3d6000fd5b505050506040513d60208110156114f757600080fd5b5051151561154f576040805160e560020a62461bcd02815260206004820152601960248201527f706f6c6c206e6f7420636f6e7461696e656420696e20444c4c00000000000000604482015290519081900360640190fd5b3360009081526003602052604080822081517f6d900ed0000000000000000000000000000000000000000000000000000000008152600481019190915260248101849052905173__DLL___________________________________92636d900ed09260448082019391829003018186803b1580156115cc57600080fd5b505af41580156115e0573d6000803e3d6000fd5b50506040513392508391507f402507661c8c8cb90e0a796450b8bdd28b6c516f05279c0cd29e84c344e1699a90600090a350565b6007546000908190600160a060020a031633146116a0576040805160e560020a62461bcd028152602060048201526024808201527f43616c6c6572206973206e6f74204f6365616e4469737075746520636f6e747260448201527f6163742e00000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6116a9846113bf565b15156116ed576040805160e560020a62461bcd028152602060048201526013602482015260008051602061258d833981519152604482015290519081900360640190fd5b5050600091825260016020818152604080852060058101805460ff199081168617909155600160a060020a0395909516865260080190915290922080549091168217905590565b600082826040516020018083600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106117ae5780518252601f19909201916020918201910161178f565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209695505050505050565b600554604080517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015290518392600160a060020a0316916370a082319160248083019260209291908290030181600087803b15801561184657600080fd5b505af115801561185a573d6000803e3d6000fd5b505050506040513d602081101561187057600080fd5b505110156118c8576040805160e560020a62461bcd02815260206004820152601160248201527f6e6f7420656e6f75676820746f6b656e73000000000000000000000000000000604482015290519081900360640190fd5b33600081815260026020908152604080832080548601905560055481517f23b872dd0000000000000000000000000000000000000000000000000000000081526004810195909552306024860152604485018690529051600160a060020a03909116936323b872dd9360648083019493928390030190829087803b15801561194f57600080fd5b505af1158015611963573d6000803e3d6000fd5b505050506040513d602081101561197957600080fd5b505115156119d1576040805160e560020a62461bcd02815260206004820152601660248201527f746f6b656e73206e6f74207472616e7366657272656400000000000000000000604482015290519081900360640190fd5b60408051828152905133917ff7aaf024511d9982df8cd0d437c71c30106e6848cd1ba3d288d7a9c0e276aeda919081900360200190a250565b6000611a15826113bf565b1515611a59576040805160e560020a62461bcd028152602060048201526013602482015260008051602061258d833981519152604482015290519081900360640190fd5b600082815260016020526040902054610a739061222e565b6000611a7c826113bf565b1515611ac0576040805160e560020a62461bcd028152602060048201526013602482015260008051602061258d833981519152604482015290519081900360640190fd5b506000908152600160209081526040808320600160a060020a0394909416835260079093019052205460ff1690565b6000611afa846109f7565b1515611b50576040805160e560020a62461bcd02815260206004820152600f60248201527f706f6c6c206e6f74206163746976650000000000000000000000000000000000604482015290519081900360640190fd5b600084815260016020908152604080832033845260060190915290205460ff161515611bc6576040805160e560020a62461bcd02815260206004820152601a60248201527f73656e64657220646964206e6f74207061727469636970617465000000000000604482015290519081900360640190fd5b600084815260016020908152604080832033845260070190915290205460ff1615611c3b576040805160e560020a62461bcd02815260206004820152601560248201527f706f6c6c20616c72656164792072657665616c65640000000000000000000000604482015290519081900360640190fd5b611c45338561218f565b604080516020808201879052818301869052825180830384018152606090920192839052815191929182918401908083835b60208310611c965780518252601f199092019160209182019101611c77565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141515611d44576040805160e560020a62461bcd02815260206004820152602660248201527f766f74654f7074696f6e48617368206e6f7420657175616c20746f20636f6d6d60448201527f6974486173680000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b611d4e33856120bd565b90508260011415611d75576000848152600160205260409020600301805482019055611d8d565b60008481526001602052604090206004018054820190555b3360009081526003602052604080822081517f6d900ed0000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052905173__DLL___________________________________92636d900ed09260448082019391829003018186803b158015611e0a57600080fd5b505af4158015611e1e573d6000803e3d6000fd5b505050600085815260016020818152604080842033808652600782018452828620805460ff191686179055948a90529282526003830154600490930154815187815292830193909352818101929092529051919250859187917ff42c78852433ace4bdcb44f6e80c8daae529e2d999c88cf6bf8f77b1e2890fdd919081900360600190a450505050565b600080600080611eb786612407565b1515611f0d576040805160e560020a62461bcd02815260206004820152601660248201527f706f6c6c20686173206e6f7420656e6465642079657400000000000000000000604482015290519081900360640190fd5b6000868152600160209081526040808320600160a060020a038b16845260070190915290205460ff161515611f8c576040805160e560020a62461bcd02815260206004820152601960248201527f706f6c6c20646964206e6f742072657665616c20766f74657200000000000000604482015290519081900360640190fd5b611f9586610a7b565b611fa0576000611fa3565b60015b60ff169250828560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310611fff5780518252601f199092019160209182019101611fe0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150612038878761218f565b90508181146120b7576040805160e560020a62461bcd02815260206004820152602960248201527f77696e6e65722068617368206e6565647320746f20626520657175616c20636f60448201527f6d6d697420686173680000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6113b487875b600073__AttributeStore________________________6350389f5c60046120e58686611734565b6040805160e060020a63ffffffff86160281526004810193909352602483019190915260606044830152600960648301527f6e756d546f6b656e73000000000000000000000000000000000000000000000060848301525160a4808301926020929190829003018186803b15801561215c57600080fd5b505af4158015612170573d6000803e3d6000fd5b505050506040513d602081101561218657600080fd5b50519392505050565b600073__AttributeStore________________________6350389f5c60046121b78686611734565b6040805160e060020a63ffffffff86160281526004810193909352602483019190915260606044830152600a60648301527f636f6d6d6974486173680000000000000000000000000000000000000000000060848301525160a4808301926020929190829003018186803b15801561215c57600080fd5b421190565b60009081526001602052604090205490565b600061226f61225333610ba3565b336000908152600260205260409020549063ffffffff61254116565b9050818110156122c9576040805160e560020a62461bcd02815260206004820152601160248201527f6e6f7420656e6f75676820746f6b656e73000000000000000000000000000000604482015290519081900360640190fd5b3360008181526002602090815260408083208054879003905560055481517fa9059cbb0000000000000000000000000000000000000000000000000000000081526004810195909552602485018790529051600160a060020a039091169363a9059cbb9360448083019493928390030190829087803b15801561234b57600080fd5b505af115801561235f573d6000803e3d6000fd5b505050506040513d602081101561237557600080fd5b505115156123cd576040805160e560020a62461bcd02815260206004820152601660248201527f746f6b656e73206e6f74207472616e7366657272656400000000000000000000604482015290519081900360640190fd5b60408051838152905133917ffaeb7dbb9992397d26ea1944efd40c80b40f702faf69b46c67ad10aba68ccb79919081900360200190a25050565b6000612412826113bf565b1515612456576040805160e560020a62461bcd028152602060048201526013602482015260008051602061258d833981519152604482015290519081900360640190fd5b60008281526001602081905260409091200154610a759061222e565b600654600160a060020a031681565b600754600090600160a060020a0316156124e5576040805160e560020a62461bcd02815260206004820152601960248201527f6469737075746541646472657373206973206e6f742030783000000000000000604482015290519081900360640190fd5b506007805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03938416179182905560068054929093169116179055600190565b600554600160a060020a031681565b81810182811015610a7557fe5b60008282111561254d57fe5b50900390565b60c060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200160001515815250905600706f6c6c20646f6573206e6f7420657869737400000000000000000000000000a165627a7a72305820c7a052a038350be123a6e31f6d25dad7f87765a31a5c54eac4d6f8b987a479000029";

    public static final String FUNC_INITIAL_POLL_NONCE = "INITIAL_POLL_NONCE";

    public static final String FUNC_POLLMAP = "pollMap";

    public static final String FUNC_DISPUTEADDRESS = "disputeAddress";

    public static final String FUNC_POLLNONCE = "pollNonce";

    public static final String FUNC_DISPUTE = "dispute";

    public static final String FUNC_TOKEN = "token";

    public static final String FUNC_GETDISPUTEINSTANCE = "getDisputeInstance";

    public static final String FUNC_REQUESTVOTINGRIGHTS = "requestVotingRights";

    public static final String FUNC_WITHDRAWVOTINGRIGHTS = "withdrawVotingRights";

    public static final String FUNC_RESCUETOKENS = "rescueTokens";

    public static final String FUNC_COMMITVOTE = "commitVote";

    public static final String FUNC_VALIDPOSITION = "validPosition";

    public static final String FUNC_REVEALVOTE = "revealVote";

    public static final String FUNC_GETNUMPASSINGTOKENS = "getNumPassingTokens";

    public static final String FUNC_STARTPOLL = "startPoll";

    public static final String FUNC_ISPASSED = "isPassed";

    public static final String FUNC_GETTOTALNUMBEROFTOKENSFORWINNINGOPTION = "getTotalNumberOfTokensForWinningOption";

    public static final String FUNC_POLLENDED = "pollEnded";

    public static final String FUNC_COMMITPERIODACTIVE = "commitPeriodActive";

    public static final String FUNC_REVEALPERIODACTIVE = "revealPeriodActive";

    public static final String FUNC_DIDCOMMIT = "didCommit";

    public static final String FUNC_DIDREVEAL = "didReveal";

    public static final String FUNC_POLLEXISTS = "pollExists";

    public static final String FUNC_ADDAUTHORIZEDVOTER = "addAuthorizedVoter";

    public static final String FUNC_GETCOMMITHASH = "getCommitHash";

    public static final String FUNC_GETNUMTOKENS = "getNumTokens";

    public static final String FUNC_GETLASTNODE = "getLastNode";

    public static final String FUNC_GETLOCKEDTOKENS = "getLockedTokens";

    public static final String FUNC_GETINSERTPOINTFORNUMTOKENS = "getInsertPointForNumTokens";

    public static final String FUNC_ISEXPIRED = "isExpired";

    public static final String FUNC_QUERYTS = "queryTS";

    public static final String FUNC_QUERYCOMMITENDDATE = "queryCommitEndDate";

    public static final String FUNC_QUERYREVEALENDDATE = "queryRevealEndDate";

    public static final String FUNC_ATTRUUID = "attrUUID";

    public static final Event _VOTECOMMITTED_EVENT = new Event("_VoteCommitted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event _VOTEREVEALED_EVENT = new Event("_VoteRevealed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event _POLLCREATED_EVENT = new Event("_PollCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event _VOTINGRIGHTSGRANTED_EVENT = new Event("_VotingRightsGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event _VOTINGRIGHTSWITHDRAWN_EVENT = new Event("_VotingRightsWithdrawn", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event _TOKENSRESCUED_EVENT = new Event("_TokensRescued", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event _VOTERPERMISSIONDECLINED_EVENT = new Event("_VoterPermissionDeclined", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {}, new TypeReference<Address>(true) {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("1528723162197", "0xd95e62f4514a5b93da46b4c25cee8ab87945dc46");
        _addresses.put("17", "0x4582aa91b3ab1bf069c6a6c70dd7aee0a8c56a71");
        _addresses.put("1530006110174", "0xc273615141be02732f4709a63279e114010db492");
        _addresses.put("1533040880765", "0xe70cf81cef1dc740a65fd1fa92a5dd05040b595f");
        _addresses.put("1539856672111", "0x37711ce705f9a7301f0ecc2fc783227a0267e25e");
    }

    @Deprecated
    protected PLCRVoting(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PLCRVoting(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PLCRVoting(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PLCRVoting(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<BigInteger> INITIAL_POLL_NONCE() {
        final Function function = new Function(FUNC_INITIAL_POLL_NONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple6<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean>> pollMap(BigInteger param0) {
        final Function function = new Function(FUNC_POLLMAP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
        return new RemoteCall<Tuple6<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean>>(
                new Callable<Tuple6<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean>>() {
                    @Override
                    public Tuple6<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, Boolean>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (Boolean) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<String> disputeAddress() {
        final Function function = new Function(FUNC_DISPUTEADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> pollNonce() {
        final Function function = new Function(FUNC_POLLNONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> dispute() {
        final Function function = new Function(FUNC_DISPUTE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> token() {
        final Function function = new Function(FUNC_TOKEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public List<_VoteCommittedEventResponse> get_VoteCommittedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_VOTECOMMITTED_EVENT, transactionReceipt);
        ArrayList<_VoteCommittedEventResponse> responses = new ArrayList<_VoteCommittedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _VoteCommittedEventResponse typedResponse = new _VoteCommittedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_VoteCommittedEventResponse> _VoteCommittedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _VoteCommittedEventResponse>() {
            @Override
            public _VoteCommittedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_VOTECOMMITTED_EVENT, log);
                _VoteCommittedEventResponse typedResponse = new _VoteCommittedEventResponse();
                typedResponse.log = log;
                typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.voter = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_VoteCommittedEventResponse> _VoteCommittedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_VOTECOMMITTED_EVENT));
        return _VoteCommittedEventFlowable(filter);
    }

    public List<_VoteRevealedEventResponse> get_VoteRevealedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_VOTEREVEALED_EVENT, transactionReceipt);
        ArrayList<_VoteRevealedEventResponse> responses = new ArrayList<_VoteRevealedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _VoteRevealedEventResponse typedResponse = new _VoteRevealedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.choice = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(2).getValue();
            typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.votesFor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.votesAgainst = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_VoteRevealedEventResponse> _VoteRevealedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _VoteRevealedEventResponse>() {
            @Override
            public _VoteRevealedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_VOTEREVEALED_EVENT, log);
                _VoteRevealedEventResponse typedResponse = new _VoteRevealedEventResponse();
                typedResponse.log = log;
                typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.choice = (BigInteger) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.voter = (String) eventValues.getIndexedValues().get(2).getValue();
                typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.votesFor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.votesAgainst = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_VoteRevealedEventResponse> _VoteRevealedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_VOTEREVEALED_EVENT));
        return _VoteRevealedEventFlowable(filter);
    }

    public List<_PollCreatedEventResponse> get_PollCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_POLLCREATED_EVENT, transactionReceipt);
        ArrayList<_PollCreatedEventResponse> responses = new ArrayList<_PollCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _PollCreatedEventResponse typedResponse = new _PollCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.creator = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.voteQuorum = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.commitEndDate = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.revealEndDate = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_PollCreatedEventResponse> _PollCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _PollCreatedEventResponse>() {
            @Override
            public _PollCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_POLLCREATED_EVENT, log);
                _PollCreatedEventResponse typedResponse = new _PollCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.creator = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.voteQuorum = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.commitEndDate = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.revealEndDate = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_PollCreatedEventResponse> _PollCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_POLLCREATED_EVENT));
        return _PollCreatedEventFlowable(filter);
    }

    public List<_VotingRightsGrantedEventResponse> get_VotingRightsGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_VOTINGRIGHTSGRANTED_EVENT, transactionReceipt);
        ArrayList<_VotingRightsGrantedEventResponse> responses = new ArrayList<_VotingRightsGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _VotingRightsGrantedEventResponse typedResponse = new _VotingRightsGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_VotingRightsGrantedEventResponse> _VotingRightsGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _VotingRightsGrantedEventResponse>() {
            @Override
            public _VotingRightsGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_VOTINGRIGHTSGRANTED_EVENT, log);
                _VotingRightsGrantedEventResponse typedResponse = new _VotingRightsGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_VotingRightsGrantedEventResponse> _VotingRightsGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_VOTINGRIGHTSGRANTED_EVENT));
        return _VotingRightsGrantedEventFlowable(filter);
    }

    public List<_VotingRightsWithdrawnEventResponse> get_VotingRightsWithdrawnEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_VOTINGRIGHTSWITHDRAWN_EVENT, transactionReceipt);
        ArrayList<_VotingRightsWithdrawnEventResponse> responses = new ArrayList<_VotingRightsWithdrawnEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _VotingRightsWithdrawnEventResponse typedResponse = new _VotingRightsWithdrawnEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_VotingRightsWithdrawnEventResponse> _VotingRightsWithdrawnEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _VotingRightsWithdrawnEventResponse>() {
            @Override
            public _VotingRightsWithdrawnEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_VOTINGRIGHTSWITHDRAWN_EVENT, log);
                _VotingRightsWithdrawnEventResponse typedResponse = new _VotingRightsWithdrawnEventResponse();
                typedResponse.log = log;
                typedResponse.voter = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.numTokens = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_VotingRightsWithdrawnEventResponse> _VotingRightsWithdrawnEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_VOTINGRIGHTSWITHDRAWN_EVENT));
        return _VotingRightsWithdrawnEventFlowable(filter);
    }

    public List<_TokensRescuedEventResponse> get_TokensRescuedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_TOKENSRESCUED_EVENT, transactionReceipt);
        ArrayList<_TokensRescuedEventResponse> responses = new ArrayList<_TokensRescuedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _TokensRescuedEventResponse typedResponse = new _TokensRescuedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_TokensRescuedEventResponse> _TokensRescuedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _TokensRescuedEventResponse>() {
            @Override
            public _TokensRescuedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_TOKENSRESCUED_EVENT, log);
                _TokensRescuedEventResponse typedResponse = new _TokensRescuedEventResponse();
                typedResponse.log = log;
                typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.voter = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_TokensRescuedEventResponse> _TokensRescuedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_TOKENSRESCUED_EVENT));
        return _TokensRescuedEventFlowable(filter);
    }

    public List<_VoterPermissionDeclinedEventResponse> get_VoterPermissionDeclinedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(_VOTERPERMISSIONDECLINED_EVENT, transactionReceipt);
        ArrayList<_VoterPermissionDeclinedEventResponse> responses = new ArrayList<_VoterPermissionDeclinedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            _VoterPermissionDeclinedEventResponse typedResponse = new _VoterPermissionDeclinedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.voter = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<_VoterPermissionDeclinedEventResponse> _VoterPermissionDeclinedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, _VoterPermissionDeclinedEventResponse>() {
            @Override
            public _VoterPermissionDeclinedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(_VOTERPERMISSIONDECLINED_EVENT, log);
                _VoterPermissionDeclinedEventResponse typedResponse = new _VoterPermissionDeclinedEventResponse();
                typedResponse.log = log;
                typedResponse.pollID = (BigInteger) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.voter = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<_VoterPermissionDeclinedEventResponse> _VoterPermissionDeclinedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(_VOTERPERMISSIONDECLINED_EVENT));
        return _VoterPermissionDeclinedEventFlowable(filter);
    }

    public RemoteCall<TransactionReceipt> getDisputeInstance(String _disputeContract) {
        final Function function = new Function(
                FUNC_GETDISPUTEINSTANCE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_disputeContract)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> requestVotingRights(BigInteger _numTokens) {
        final Function function = new Function(
                FUNC_REQUESTVOTINGRIGHTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_numTokens)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> withdrawVotingRights(BigInteger _numTokens) {
        final Function function = new Function(
                FUNC_WITHDRAWVOTINGRIGHTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_numTokens)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> rescueTokens(BigInteger _pollID) {
        final Function function = new Function(
                FUNC_RESCUETOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> commitVote(BigInteger _pollID, byte[] _secretHash, BigInteger _numTokens, BigInteger _prevPollID) {
        final Function function = new Function(
                FUNC_COMMITVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID), 
                new org.web3j.abi.datatypes.generated.Bytes32(_secretHash), 
                new org.web3j.abi.datatypes.generated.Uint256(_numTokens), 
                new org.web3j.abi.datatypes.generated.Uint256(_prevPollID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> validPosition(BigInteger _prevID, BigInteger _nextID, String _voter, BigInteger _numTokens) {
        final Function function = new Function(FUNC_VALIDPOSITION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_prevID), 
                new org.web3j.abi.datatypes.generated.Uint256(_nextID), 
                new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_numTokens)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> revealVote(BigInteger _pollID, BigInteger _voteOption, BigInteger _salt) {
        final Function function = new Function(
                FUNC_REVEALVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID), 
                new org.web3j.abi.datatypes.generated.Uint256(_voteOption), 
                new org.web3j.abi.datatypes.generated.Uint256(_salt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getNumPassingTokens(String _voter, BigInteger _pollID, BigInteger _salt) {
        final Function function = new Function(FUNC_GETNUMPASSINGTOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID), 
                new org.web3j.abi.datatypes.generated.Uint256(_salt)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> startPoll(BigInteger _voteQuorum, BigInteger _commitDuration, BigInteger _revealDuration) {
        final Function function = new Function(
                FUNC_STARTPOLL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_voteQuorum), 
                new org.web3j.abi.datatypes.generated.Uint256(_commitDuration), 
                new org.web3j.abi.datatypes.generated.Uint256(_revealDuration)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> isPassed(BigInteger _pollID) {
        final Function function = new Function(FUNC_ISPASSED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<BigInteger> getTotalNumberOfTokensForWinningOption(BigInteger _pollID) {
        final Function function = new Function(FUNC_GETTOTALNUMBEROFTOKENSFORWINNINGOPTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Boolean> pollEnded(BigInteger _pollID) {
        final Function function = new Function(FUNC_POLLENDED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> commitPeriodActive(BigInteger _pollID) {
        final Function function = new Function(FUNC_COMMITPERIODACTIVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> revealPeriodActive(BigInteger _pollID) {
        final Function function = new Function(FUNC_REVEALPERIODACTIVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> didCommit(String _voter, BigInteger _pollID) {
        final Function function = new Function(FUNC_DIDCOMMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> didReveal(String _voter, BigInteger _pollID) {
        final Function function = new Function(FUNC_DIDREVEAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> pollExists(BigInteger _pollID) {
        final Function function = new Function(FUNC_POLLEXISTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> addAuthorizedVoter(BigInteger _pollID, String _voter) {
        final Function function = new Function(
                FUNC_ADDAUTHORIZEDVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID), 
                new org.web3j.abi.datatypes.Address(_voter)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<byte[]> getCommitHash(String _voter, BigInteger _pollID) {
        final Function function = new Function(FUNC_GETCOMMITHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<BigInteger> getNumTokens(String _voter, BigInteger _pollID) {
        final Function function = new Function(FUNC_GETNUMTOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getLastNode(String _voter) {
        final Function function = new Function(FUNC_GETLASTNODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getLockedTokens(String _voter) {
        final Function function = new Function(FUNC_GETLOCKEDTOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getInsertPointForNumTokens(String _voter, BigInteger _numTokens, BigInteger _pollID) {
        final Function function = new Function(FUNC_GETINSERTPOINTFORNUMTOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_numTokens), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Boolean> isExpired(BigInteger _terminationDate) {
        final Function function = new Function(FUNC_ISEXPIRED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_terminationDate)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<BigInteger> queryTS() {
        final Function function = new Function(FUNC_QUERYTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> queryCommitEndDate(BigInteger _pollID) {
        final Function function = new Function(FUNC_QUERYCOMMITENDDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> queryRevealEndDate(BigInteger _pollID) {
        final Function function = new Function(FUNC_QUERYREVEALENDDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<byte[]> attrUUID(String _user, BigInteger _pollID) {
        final Function function = new Function(FUNC_ATTRUUID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user), 
                new org.web3j.abi.datatypes.generated.Uint256(_pollID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    @Deprecated
    public static PLCRVoting load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PLCRVoting(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PLCRVoting load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PLCRVoting(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PLCRVoting load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PLCRVoting(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PLCRVoting load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PLCRVoting(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PLCRVoting> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _tokenAddr) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_tokenAddr)));
        return deployRemoteCall(PLCRVoting.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<PLCRVoting> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _tokenAddr) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_tokenAddr)));
        return deployRemoteCall(PLCRVoting.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<PLCRVoting> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _tokenAddr) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_tokenAddr)));
        return deployRemoteCall(PLCRVoting.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<PLCRVoting> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _tokenAddr) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_tokenAddr)));
        return deployRemoteCall(PLCRVoting.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class _VoteCommittedEventResponse {
        public Log log;

        public BigInteger pollID;

        public String voter;

        public BigInteger numTokens;
    }

    public static class _VoteRevealedEventResponse {
        public Log log;

        public BigInteger pollID;

        public BigInteger choice;

        public String voter;

        public BigInteger numTokens;

        public BigInteger votesFor;

        public BigInteger votesAgainst;
    }

    public static class _PollCreatedEventResponse {
        public Log log;

        public BigInteger pollID;

        public String creator;

        public BigInteger voteQuorum;

        public BigInteger commitEndDate;

        public BigInteger revealEndDate;
    }

    public static class _VotingRightsGrantedEventResponse {
        public Log log;

        public String voter;

        public BigInteger numTokens;
    }

    public static class _VotingRightsWithdrawnEventResponse {
        public Log log;

        public String voter;

        public BigInteger numTokens;
    }

    public static class _TokensRescuedEventResponse {
        public Log log;

        public BigInteger pollID;

        public String voter;
    }

    public static class _VoterPermissionDeclinedEventResponse {
        public Log log;

        public BigInteger pollID;

        public String voter;
    }
}
